<%@ CodeTemplate Language="C#" TargetLanguage="Text" OutputType="None" CompilerVersion="v4.5" Description="" %>

<%@ Property Category="01. Setup" Name="OutputDirectory" Default="C:\_Testing"
    Type="System.String" Default="" Optional="False" 
    Description="The folder to save the generated files." 
    Editor="System.Windows.Forms.Design.FolderNameEditor, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" %>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.Core" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>

<%@ Import Namespace="SchemaExplorer" %>
<%@ Import Namespace="System.IO" %>
<%@ Import Namespace="System.Linq" %>
<%@ Import Namespace="System.Collections.Generic" %>
<%@ Import Namespace="CodeSmith.Core.Extensions" %>

<%@ Register Name="PreserveTest" Template="PreserveTest.cst" %>

<script runat="template">

    // ENTRY POINT
    // Controls setup of variables, directories, and calls subordinate templates.
    public override void Render(TextWriter writer)
    {
        var outputDir = OutputDirectory; 
        var file = default(OutputFile);
        var fileName = string.Empty;

        if (!Directory.Exists(outputDir)){ Directory.CreateDirectory(outputDir); }

        var jsStrategy = new PreserveRegionsMergeStrategy();
        jsStrategy.RegionNameRegex = "Custom";
        jsStrategy.Language = "JavaScript";

        fileName = "test_a.js";
        file = new OutputFile(Path.Combine(outputDir, fileName));
        PreserveTest testA = this.Create<PreserveTest>();
        testA.RenderToFile(file, true);

        fileName = "test_b.js";
        PreserveTest testB = this.Create<PreserveTest>();
        testB.RenderToFile(Path.Combine(outputDir, fileName), true);

        fileName = "test_c.js";
        file = new OutputFile(Path.Combine(outputDir, fileName));
        PreserveTest testC = this.Create<PreserveTest>();
        testC.RenderToFile(file, jsStrategy);

        fileName = "test_d.js";
        PreserveTest testD = this.Create<PreserveTest>();
        testD.RenderToFile(Path.Combine(outputDir, fileName), jsStrategy);
    }
    
</script>
